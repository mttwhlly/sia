# Base stage with PNPM setup
FROM node:20-alpine AS base

# Set working directory
WORKDIR /app

# Setup PNPM
ENV PNPM_HOME="/pnpm"
ENV PATH="${PATH}:${PNPM_HOME}"
RUN mkdir -p $PNPM_HOME
RUN corepack enable

# Copy package files for dependency installation
COPY package.json pnpm-lock.yaml ./

# Production dependencies stage
FROM base AS prod-deps
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --prod --frozen-lockfile

# Development dependencies stage
FROM base AS dev-deps
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

# Build stage
FROM dev-deps AS build
COPY . .
RUN pnpm run build

# Storybook build stage
FROM dev-deps AS storybook-builder
COPY . .
RUN pnpm run build-storybook

# Production stage with Nginx
FROM nginx:alpine AS runner
WORKDIR /usr/share/nginx/html
# Remove default nginx static assets
RUN rm -rf ./*
# Copy static assets from builder
COPY --from=storybook-builder /app/storybook-static .
# Copy nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf
# Expose Storybook's default port
EXPOSE 6006

CMD ["nginx", "-g", "daemon off;"]